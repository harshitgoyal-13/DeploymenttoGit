{
  "version": 4,
  "terraform_version": "1.4.6",
  "serial": 12,
  "lineage": "fabbd002-e811-2850-67bb-0780ac48e8bc",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "github_repository",
      "name": "demoJenkins",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "allow_update_branch": false,
            "archive_on_destroy": null,
            "archived": false,
            "auto_init": true,
            "default_branch": "main",
            "delete_branch_on_merge": false,
            "description": "I am deploying my python code to my repository. Now, I will use this repository by adding git hub plugin to Jenkins",
            "etag": "W/\"27080485e67e73cb7e8fa623b05bf0656f82b2b0cbd1a7f23992f427cbe80cf2\"",
            "full_name": "harshitgoyal2/demoJenkins",
            "git_clone_url": "git://github.com/harshitgoyal2/demoJenkins.git",
            "gitignore_template": null,
            "has_discussions": false,
            "has_downloads": false,
            "has_issues": false,
            "has_projects": false,
            "has_wiki": false,
            "homepage_url": "",
            "html_url": "https://github.com/harshitgoyal2/demoJenkins",
            "http_clone_url": "https://github.com/harshitgoyal2/demoJenkins.git",
            "id": "demoJenkins",
            "ignore_vulnerability_alerts_during_read": null,
            "is_template": false,
            "license_template": null,
            "merge_commit_message": "PR_TITLE",
            "merge_commit_title": "MERGE_MESSAGE",
            "name": "demoJenkins",
            "node_id": "R_kgDOJhM5sQ",
            "pages": [],
            "private": false,
            "repo_id": 638794161,
            "security_and_analysis": [
              {
                "advanced_security": [],
                "secret_scanning": [
                  {
                    "status": "disabled"
                  }
                ],
                "secret_scanning_push_protection": [
                  {
                    "status": "disabled"
                  }
                ]
              }
            ],
            "squash_merge_commit_message": "COMMIT_MESSAGES",
            "squash_merge_commit_title": "COMMIT_OR_PR_TITLE",
            "ssh_clone_url": "git@github.com:harshitgoyal2/demoJenkins.git",
            "svn_url": "https://github.com/harshitgoyal2/demoJenkins",
            "template": [],
            "topics": [],
            "visibility": "public",
            "vulnerability_alerts": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "github_repository_file",
      "name": "pythonCode",
      "provider": "provider[\"registry.terraform.io/hashicorp/github\"]",
      "instances": [
        {
          "index_key": "sample.py",
          "schema_version": 0,
          "attributes": {
            "branch": null,
            "commit_author": null,
            "commit_email": null,
            "commit_message": "Managed by Terraform 8th time successfully",
            "commit_sha": "fc00b8f22d8d5afd48206f1db3a26beedcdb9989",
            "content": "class Node:\r\n    def __init__(self, data):\r\n        self.data = data\r\n        self.left = None\r\n        self.right = None\r\n\r\nclass BinaryTree:\r\n    def __init__(self):\r\n        self.root = None\r\n\r\n    def insert(self, data):\r\n        if self.root is None:\r\n            self.root = Node(data)\r\n        else:\r\n            self._insert_recursive(data, self.root)\r\n\r\n    def _insert_recursive(self, data, node):\r\n        if data \u003c node.data:\r\n            if node.left is None:\r\n                node.left = Node(data)\r\n            else:\r\n                self._insert_recursive(data, node.left)\r\n        else:\r\n            if node.right is None:\r\n                node.right = Node(data)\r\n            else:\r\n                self._insert_recursive(data, node.right)\r\n\r\n    def search(self, data):\r\n        return self._search_recursive(data, self.root)\r\n\r\n    def _search_recursive(self, data, node):\r\n        if node is None or node.data == data:\r\n            return node\r\n        if data \u003c node.data:\r\n            return self._search_recursive(data, node.left)\r\n        return self._search_recursive(data, node.right)\r\n\r\n    def inorder_traversal(self):\r\n        result = []\r\n        self._inorder_recursive(self.root, result)\r\n        return result\r\n\r\n    def _inorder_recursive(self, node, result):\r\n        if node is not None:\r\n            self._inorder_recursive(node.left, result)\r\n            result.append(node.data)\r\n            self._inorder_recursive(node.right, result)\r\n\r\ntree = BinaryTree()\r\ntree.insert(5)\r\ntree.insert(3)\r\ntree.insert(7)\r\ntree.insert(1)\r\ntree.insert(4)\r\n\r\nprint(tree.inorder_traversal())  \r\nprint(tree.search(4))  \r\n",
            "file": "sample.py",
            "id": "demoJenkins/sample.py",
            "overwrite_on_create": false,
            "ref": "main",
            "repository": "demoJenkins",
            "sha": "207863bd6c4d9333edb2d2b8facde8ebfaf8677c"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "github_repository.demoJenkins"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
